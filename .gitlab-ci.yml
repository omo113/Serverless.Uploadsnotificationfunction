image: mcr.microsoft.com/dotnet/sdk:8.0

stages:
  - test-job
  # - build
  # - test
  # - deploy

variables:
  DOTNET_CLI_HOME: "$CI_PROJECT_DIR"  # Prevent permission issues during restore
  PATH: "$PATH:/root/.dotnet/tools"   # Add tools to PATH

test-job:
  stage: test-job
  script:
    - echo "Running unit tests..."

# Build Job
build-job:
  stage: build
  script:
    - echo "Restoring .NET dependencies..."
    - dotnet restore Serverless.UploadsNotificationFunction/src/  # Restore dependencies
    - echo "Building .NET project..."
    - dotnet build Serverless.UploadsNotificationFunction/src/ -c Release  # Build the project
    - echo "Publishing .NET Lambda..."
    - dotnet publish Serverless.UploadsNotificationFunction/src/ -c Release -f net8.0 -o publish/
    - echo "Building SAM application..."
    - sam build --template template.yaml --use-container  # Build the SAM application using container for Lambda

# Test Job
unit-test-job:
  stage: test
  script:
    - echo "Running unit tests..."
    - dotnet test Serverless.UploadsNotificationFunction/src/Tests/  # Replace with your test project path
    - echo "Unit tests completed successfully."

# Deploy Job
deploy-job:
  stage: deploy
  image: amazon/aws-cli:2.12.6  # Use AWS CLI image for deployment
  environment: production
  script:
    - echo "Packaging SAM application..."
    - sam package --s3-bucket omo-bucket-01 --output-template-file packaged.yaml
    - echo "Deploying SAM application to AWS..."
    - sam deploy --template-file packaged.yaml --stack-name ServerlessLambdaStack --capabilities CAPABILITY_IAM
  only:
    - main  # Deploy only from the main branch
